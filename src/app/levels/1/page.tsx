'use client';

import { useEffect, useState } from 'react';
import Widget from '@/shared/ui/Widget';
import LevelView from '@/shared/ui/LevelView';
import { useConsole } from '@/features/model/useConsole';
import { Editor } from '@monaco-editor/react';
import { complete, run, spawnCactus } from '@/features/model/gameMechanics';
import { useLevelTransition } from '@/features/model/levelTransition';

export default function LevelOne() {
    const { addLog } = useConsole();
    const { completeLevel, showNextLevelOption, goToNext, hasNextLevel } = useLevelTransition();

    const [code, setCode] = useState<string>(`// –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
pragma solidity ^0.8.0;

contract Wallet {
    address public owner;
    uint256 public balance;
    
    // TODO: –î–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    
    // TODO: –°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é payable
    function deposit() public {
        balance += msg.value;
    }
    
    function getBalance() public view returns (uint256) {
        return balance;
    }
}`);

    const [hints, setHints] = useState<string[]>([]);
    const [walletActive, setWalletActive] = useState(false);
    const [showNextLevelButton, setShowNextLevelButton] = useState(false);
    const [levelCompleted, setLevelCompleted] = useState(false);

    useEffect(() => {
        run();
        addLog('üéØ –ú–∏—Å—Å–∏—è: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ—à–µ–ª—ë–∫!');
        addLog('üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å constructor –∏ —Å–¥–µ–ª–∞—Ç—å deposit() payable');
        
        setTimeout(() => {
            spawnCactus();
        }, 1000);
    }, []);

    const checkCode = () => {
        const hasConstructor = code.includes('constructor');
        const hasPayable = code.includes('payable');
        const hasContract = code.includes('contract');
        
        const newHints = [];
        
        if (!hasConstructor) {
            newHints.push('–î–æ–±–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é constructor –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞');
        }
        if (!hasPayable) {
            newHints.push('–§—É–Ω–∫—Ü–∏—è deposit() –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å payable –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ETH');
        }
        
        setHints(newHints);
        return hasConstructor && hasPayable && hasContract;
    };

    const handleCompile = () => {
        addLog('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...');
        
        if (checkCode()) {
            addLog('‚úÖ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω!');
            addLog('üéâ –ö–æ—à–µ–ª—ë–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –°—Ä–µ–¥—Å—Ç–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!');
            setWalletActive(true);
            setLevelCompleted(true);
            
            // –ó–∞–≤–µ—Ä—à–∞–µ–º —É—Ä–æ–≤–µ–Ω—å
            const isNewCompletion = completeLevel(1);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                setShowNextLevelButton(true);
                if (hasNextLevel) {
                    addLog('‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!');
                } else {
                    addLog('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—Å–µ —É—Ä–æ–≤–Ω–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!');
                }
            }, 2000);
            
            complete();
        } else {
            addLog('‚ùå –û—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏.');
            setHints(hints);
            hints.forEach(hint => addLog(`üí° ${hint}`));
        }
    };

    return (
        <LevelView>
            <Widget
                windowMode
                title="–£—Ä–æ–≤–µ–Ω—å 1: –ö–æ—à–µ–ª—ë–∫ –≤ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
                icon={
                    <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#e3e3e3">
                        <path d="M280-240q-17 0-28.5-11.5T240-280v-280q0-17 11.5-28.5T280-600h40v-80q0-83 58.5-141.5T520-880q83 0 141.5 58.5T720-680v80h40q17 0 28.5 11.5T800-560v280q0 17-11.5 28.5T760-240H280Zm240-200q33 0 56.5-23.5T600-520q0-33-23.5-56.5T520-600q-33 0-56.5 23.5T440-520q0 33 23.5 56.5T520-440ZM360-600h320v-80q0-66-47-113t-113-47q-66 0-113 47t-47 113v80Z"/>
                    </svg>
                }
            >
                <div className="h-full w-full overflow-y-scroll relative pb-24">
                    <div className="absolute bottom-16 right-3 flex gap-2">
                        <div className={`px-3 py-1 rounded text-sm ${walletActive ? 'bg-green-600' : 'bg-red-600'}`}>
                            {walletActive ? 'üîì –ö–æ—à–µ–ª—ë–∫ –∞–∫—Ç–∏–≤–µ–Ω' : 'üîí –ö–æ—à–µ–ª—ë–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}
                        </div>
                        
                        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è */}
                        {showNextLevelButton ? (
                            hasNextLevel ? (
                                <button
                                    className="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 animate-pulse"
                                    onClick={goToNext}
                                >
                                    –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å ‚Üí
                                </button>
                            ) : (
                                <button
                                    className="px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700"
                                    onClick={() => goToNext()}
                                >
                                    –ö —Å–ø–∏—Å–∫—É —É—Ä–æ–≤–Ω–µ–π
                                </button>
                            )
                        ) : (
                            <button
                                className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
                                onClick={handleCompile}
                                disabled={levelCompleted}
                            >
                                {levelCompleted ? '–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úì' : '–ó–∞–ø—É—Å–∫'}
                            </button>
                        )}
                    </div>

                    <div className="p-4">
                        <div className="text-2xl font-semibold">
                            üè¶ –ó–∞–¥–∞—á–∞ #1: –ö–æ—à–µ–ª—ë–∫ –≤ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                        </div>
                        <div className="mt-2 text-lg">
                            –í–∞—à —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç –∫–æ—à–µ–ª—å–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏! 
                            –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥, —á—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å—Ä–µ–¥—Å—Ç–≤–∞–º.
                        </div>

                        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω */}
                        {hints.length > 0 && !levelCompleted && (
                            <div className="mt-4 p-3 bg-yellow-900/30 border border-yellow-600 rounded">
                                <div className="font-semibold text-yellow-300">AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ —Å–æ–≤–µ—Ç—É–µ—Ç:</div>
                                {hints.map((hint, idx) => (
                                    <div key={idx} className="text-yellow-200">‚Ä¢ {hint}</div>
                                ))}
                            </div>
                        )}

                        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ */}
                        {levelCompleted && (
                            <div className="mt-4 p-3 bg-green-900/30 border border-green-600 rounded">
                                <div className="font-semibold text-green-300">üéâ –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–π–¥–µ–Ω!</div>
                                <div className="text-green-200">
                                    –û—Ç–ª–∏—á–Ω–æ! –í—ã –∏—Å–ø—Ä–∞–≤–∏–ª–∏ –æ—à–∏–±–∫–∏ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∫–æ—à–µ–ª—ë–∫. 
                                    {hasNextLevel ? " –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏—Å–ø—ã—Ç–∞–Ω–∏—é!" : " –í—Å–µ —É—Ä–æ–≤–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"}
                                </div>
                            </div>
                        )}

                        <div className="mt-6 h-[500px] flex flex-col gap-4">
                            <Editor
                                language="solidity"
                                theme="vs-dark"
                                value={code}
                                onChange={(value?: string) => setCode(value ?? '')}
                                options={{
                                    minimap: { enabled: false },
                                    fontSize: 14,
                                    readOnly: levelCompleted, // –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                                }}
                            />
                        </div>
                    </div>
                </div>
            </Widget>
        </LevelView>
    );
}
