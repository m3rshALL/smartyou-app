'use client';

import { useEffect, useState } from 'react';
import Widget from '@/shared/ui/Widget';
import LevelView from '@/shared/ui/LevelView';
import { useConsole } from '@/features/model/useConsole';
import { Editor } from '@monaco-editor/react';
import { complete, run, spawnCactus } from '@/features/model/gameMechanics';
import { useLevelTransition } from '@/features/model/levelTransition';
import { useRouter } from 'next/navigation';

export default function LevelFour() {
    const router = useRouter();
    const { addLog } = useConsole();
    const { completeLevel, goToNext, hasNextLevel } = useLevelTransition();

    const [code, setCode] = useState<string>(`// –°–æ–∑–¥–∞–π—Ç–µ DAO –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º
pragma solidity ^0.8.0;

contract DefenderDAO {
    // TODO: –°–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Proposal
    // struct Proposal { ... }
    
    mapping(address => uint256) public tokenBalance;
    mapping(uint256 => mapping(address => bool)) public hasVoted;
    
    Proposal[] public proposals;
    uint256 public proposalCount;
    
    constructor() {
        // –ù–∞—á–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
        tokenBalance[0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2] = 5; // –ê–ª–∏—Å–∞
        tokenBalance[0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db] = 3; // –ë–æ–±  
        tokenBalance[0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB] = 2; // –ß–∞—Ä–ª–∏
    }
    
    function createProposal(string memory description) public {
        // TODO: –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å —Ç–∞–π–º–µ—Ä–æ–º
    }
    
    function vote(uint256 proposalId, bool support) public {
        // TODO: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –≤–∑–≤–µ—à–µ–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
        // TODO: –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤ –≥–æ–ª–æ—Å—É—é—â–µ–≥–æ
    }
    
    function executeProposal(uint256 proposalId) public {
        // TODO: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å—Ç–µ—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
        // TODO: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    }
}`);

    const [proposals, setProposals] = useState([
        {
            id: 1,
            description: "–£–≤–µ–ª–∏—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞ 20%",
            votesFor: 0,
            votesAgainst: 0,
            deadline: Date.now() + 30000, // 30 —Å–µ–∫—É–Ω–¥
            executed: false
        }
    ]);

    const [voters] = useState([
        { name: "–ê–ª–∏—Å–∞", tokens: 5, address: "0xAb8..." },
        { name: "–ë–æ–±", tokens: 3, address: "0x4B2..." },
        { name: "–ß–∞—Ä–ª–∏", tokens: 2, address: "0x787..." }
    ]);

    const [showNextLevelButton, setShowNextLevelButton] = useState(false);
    const [levelCompleted, setLevelCompleted] = useState(false);
    const [daoActive, setDaoActive] = useState(false);

    useEffect(() => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —É—Ä–æ–≤–Ω—é (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω —É—Ä–æ–≤–µ–Ω—å 3)
        // TODO: Implement level access check if needed
        
        run();
        addLog('üèõÔ∏è –ú–∏—Å—Å–∏—è: –°–æ–∑–¥–∞–π—Ç–µ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é!');
        addLog('‚öñÔ∏è –†–µ–∞–ª–∏–∑—É–π—Ç–µ –≤–∑–≤–µ—à–µ–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø–æ —Ç–æ–∫–µ–Ω–∞–º');
        
        setTimeout(() => {
            spawnCactus();
        }, 1000);
    }, []);

    const checkCode = () => {
        const hasStruct = code.includes('struct Proposal') && 
                         code.includes('deadline') && 
                         code.includes('votesFor');
        const hasWeightedVoting = code.includes('tokenBalance[msg.sender]') || 
                                code.includes('tokenBalance');
        const hasTimeCheck = code.includes('block.timestamp') || 
                           code.includes('deadline');
        
        return hasStruct && hasWeightedVoting && hasTimeCheck;
    };

    const simulateDAOVoting = () => {
        addLog('üó≥Ô∏è –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤ DAO...');
        
        voters.forEach((voter, index) => {
            setTimeout(() => {
                const support = Math.random() > 0.3; // 70% –∑–∞, 30% –ø—Ä–æ—Ç–∏–≤
                const weight = voter.tokens;
                
                setProposals(prev => prev.map(p => p.id === 1 ? {
                    ...p,
                    votesFor: support ? p.votesFor + weight : p.votesFor,
                    votesAgainst: !support ? p.votesAgainst + weight : p.votesAgainst
                } : p));
                
                addLog(`${support ? '‚úÖ' : '‚ùå'} ${voter.name} –≥–æ–ª–æ—Å—É–µ—Ç ${support ? '–ó–ê' : '–ü–†–û–¢–ò–í'} (+${weight} —Ç–æ–∫–µ–Ω–æ–≤)`);
                
                if (index === voters.length - 1) {
                    setTimeout(() => {
                        addLog('‚è∞ –í—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ!');
                        addLog('üìä –ü–æ–¥—Å—á—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...');
                        
                        const proposal = proposals[0];
                        if (proposal.votesFor > proposal.votesAgainst) {
                            addLog('üéâ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ü–†–ò–ù–Ø–¢–û! –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...');
                        } else {
                            addLog('‚ùå –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –û–¢–ö–õ–û–ù–ï–ù–û');
                        }
                    }, 2000);
                }
            }, index * 1000);
        });
    };

    const handleCompile = () => {
        addLog('üîç –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ DAO –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞...');
        
        if (checkCode()) {
            addLog('‚úÖ DAO –∫–æ–Ω—Ç—Ä–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç!');
            addLog('üéâ –°–æ–≤–µ—Ç –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!');
            setDaoActive(true);
            setLevelCompleted(true);
            
            // –ó–∞–≤–µ—Ä—à–∞–µ–º —É—Ä–æ–≤–µ–Ω—å
            const isNewCompletion = completeLevel(4);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                setShowNextLevelButton(true);
                if (hasNextLevel) {
                    addLog('‚û°Ô∏è –§–ò–ù–ê–õ–¨–ù–´–ô –£–†–û–í–ï–ù–¨ "–ò—Å–ø—ã—Ç–∞–Ω–∏–µ —Ö–∞–∫–µ—Ä–∞" —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!');
                    addLog('‚ö†Ô∏è –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —Å–µ—Ä—å—ë–∑–Ω–æ–º—É –≤—ã–∑–æ–≤—É!');
                } else {
                    addLog('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—Å–µ —É—Ä–æ–≤–Ω–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!');
                }
            }, 3000);
            
            simulateDAOVoting();
            complete();
        } else {
            addLog('‚ùå –û—à–∏–±–∫–∏ –≤ DAO –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ!');
            addLog('üí° –°–æ–∑–¥–∞–π—Ç–µ struct Proposal —Å –ø–æ–ª—è–º–∏: description, votesFor, votesAgainst, deadline');
            addLog('üí° –í vote() —É–º–Ω–æ–∂–∞–π—Ç–µ –≥–æ–ª–æ—Å –Ω–∞ tokenBalance[msg.sender]');
            addLog('üí° –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ block.timestamp <= deadline');
        }
    };

    return (
        <LevelView>
            <Widget
                windowMode
                title="–£—Ä–æ–≤–µ–Ω—å 4: DAO ‚Äî –°–æ–≤–µ—Ç –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤"
                icon={
                    <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#e3e3e3">
                        <path d="M160-120v-480l320-240 320 240v480H560v-280H400v280H160Z"/>
                    </svg>
                }
            >
                <div className="h-full w-full overflow-y-scroll relative pb-24">
                    <div className="absolute bottom-16 right-3 flex gap-2">
                        <div className={`px-3 py-1 rounded text-sm ${daoActive ? 'bg-green-600' : 'bg-indigo-600'}`}>
                            {daoActive ? 'üèõÔ∏è DAO –∞–∫—Ç–∏–≤–Ω–æ' : 'üîí DAO –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ'}
                        </div>
                        
                        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è */}
                        {showNextLevelButton ? (
                            hasNextLevel ? (
                                <button
                                    className="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 animate-pulse"
                                    onClick={goToNext}
                                >
                                    –§–ò–ù–ê–õ–¨–ù–´–ô –£–†–û–í–ï–ù–¨ ‚Üí
                                </button>
                            ) : (
                                <button
                                    className="px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700"
                                    onClick={() => goToNext()}
                                >
                                    –ö —Å–ø–∏—Å–∫—É —É—Ä–æ–≤–Ω–µ–π
                                </button>
                            )
                        ) : (
                            <button
                                className="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700"
                                onClick={handleCompile}
                                disabled={levelCompleted}
                            >
                                {levelCompleted ? '–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úì' : '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å DAO'}
                            </button>
                        )}
                    </div>

                    <div className="p-4">
                        <div className="text-2xl font-semibold">
                            üèõÔ∏è –ó–∞–¥–∞—á–∞ #4: DAO ‚Äî –°–æ–≤–µ—Ç –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤
                        </div>
                        <div className="mt-2 text-lg">
                            –°–æ–∑–¥–∞–π—Ç–µ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —Å –≤–∑–≤–µ—à–µ–Ω–Ω—ã–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º –ø–æ —Ç–æ–∫–µ–Ω–∞–º.
                        </div>

                        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ */}
                        {levelCompleted && (
                            <div className="mt-4 p-3 bg-green-900/30 border border-green-600 rounded">
                                <div className="font-semibold text-green-300">üéâ –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–π–¥–µ–Ω!</div>
                                <div className="text-green-200">
                                    –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –í—ã —Å–æ–∑–¥–∞–ª–∏ —Ä–∞–±–æ—Ç–∞—é—â—É—é DAO —Å –≤–∑–≤–µ—à–µ–Ω–Ω—ã–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º. 
                                    {hasNextLevel ? " –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –∂–¥—ë—Ç –≤–∞—Å!" : " –í—Å–µ —É—Ä–æ–≤–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"}
                                </div>
                            </div>
                        )}

                        {/* –ü–∞–Ω–µ–ª—å DAO */}
                        <div className="mt-4 space-y-3">
                            {/* –£—á–∞—Å—Ç–Ω–∏–∫–∏ */}
                            <div className="p-3 bg-indigo-900/30 border border-indigo-600 rounded">
                                <div className="font-semibold text-indigo-300">–£—á–∞—Å—Ç–Ω–∏–∫–∏ DAO:</div>
                                <div className="grid grid-cols-3 gap-2 mt-2">
                                    {voters.map((voter) => (
                                        <div key={voter.name} className="text-center">
                                            <div className="font-semibold">{voter.name}</div>
                                            <div className="text-sm">ü™ô {voter.tokens} —Ç–æ–∫–µ–Ω–æ–≤</div>
                                        </div>
                                    ))}
                                </div>
                            </div>

                            {/* –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è */}
                            <div className="p-3 bg-green-900/30 border border-green-600 rounded">
                                <div className="font-semibold text-green-300">–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</div>
                                {proposals.map((proposal) => (
                                    <div key={proposal.id} className="mt-2">
                                        <div className="font-medium">{proposal.description}</div>
                                        <div className="flex gap-4 text-sm mt-1">
                                            <span className="text-green-300">‚úÖ –ó–ê: {proposal.votesFor}</span>
                                            <span className="text-red-300">‚ùå –ü–†–û–¢–ò–í: {proposal.votesAgainst}</span>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>

                        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ */}
                        {!levelCompleted && (
                            <div className="mt-4 p-3 bg-yellow-900/30 border border-yellow-600 rounded">
                                <div className="font-semibold text-yellow-300">üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ DAO:</div>
                                <div className="text-yellow-200 text-sm space-y-1 mt-2">
                                    <div>‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ struct Proposal: description, votesFor, votesAgainst, deadline, executed</div>
                                    <div>‚Ä¢ –í createProposal(): proposals.push(Proposal(...)), proposalCount++</div>
                                    <div>‚Ä¢ –í vote(): require(!hasVoted[proposalId][msg.sender]), –ø—Ä–æ–≤–µ—Ä–∏—Ç—å deadline</div>
                                    <div>‚Ä¢ –í–∑–≤–µ—à–µ–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: votesFor += tokenBalance[msg.sender]</div>
                                    <div>‚Ä¢ –í executeProposal(): –ø—Ä–æ–≤–µ—Ä–∏—Ç—å block.timestamp &gt; deadline</div>
                                </div>
                            </div>
                        )}

                        {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —É—Ä–æ–≤–Ω–µ */}
                        {showNextLevelButton && hasNextLevel && (
                            <div className="mt-4 p-3 bg-red-900/30 border border-red-600 rounded animate-pulse">
                                <div className="font-semibold text-red-300">‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ!</div>
                                <div className="text-red-200 text-sm">
                                    –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å - —ç—Ç–æ —Å–µ—Ä—å—ë–∑–Ω—ã–π –≤—ã–∑–æ–≤. –í–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞—â–∏—Ç–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç –æ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö —Ö–∞–∫–µ—Ä—Å–∫–∏—Ö –∞—Ç–∞–∫. 
                                    –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è!
                                </div>
                            </div>
                        )}

                        <div className="mt-6 h-[400px] flex flex-col gap-4">
                            <Editor
                                language="solidity"
                                theme="vs-dark"
                                value={code}
                                onChange={(value?: string) => setCode(value ?? '')}
                                options={{
                                    minimap: { enabled: false },
                                    fontSize: 14,
                                    readOnly: levelCompleted, // –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                                }}
                            />
                        </div>
                    </div>
                </div>
            </Widget>
        </LevelView>
    );
}