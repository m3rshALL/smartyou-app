import { useExtendedGameStore } from "./useExtendedGameStore";
import { useConsole } from "./useConsole";

export function run() {
    const { setPlayerRunning, setPlayerDead } = useExtendedGameStore.getState();
    setPlayerRunning(true);
    setPlayerDead(false);
}

export function spawnCactus() {
    const { setCompleted, setIsCactusSpawned } = useExtendedGameStore.getState();
    setCompleted(false);
    setIsCactusSpawned(true);
}

export function complete() {
    const {
        setPlayerJumping,
        setCompleted,
        setIsCactusSpawned
    } = useExtendedGameStore.getState();

    setPlayerJumping(true);
    setCompleted(true);

    setTimeout(() => {
        setPlayerJumping(false);
        setIsCactusSpawned(false);
    }, 1200);
}

export function die() {
    const { setPlayerDead, setPlayerRunning } = useExtendedGameStore.getState();
    const { addLog } = useConsole.getState();
    
    setPlayerDead(true);
    addLog('üíÄ –ò–≥—Ä–æ–∫ –ø–æ–≥–∏–±! –ö–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏.');
    
    setTimeout(() => {
        setPlayerRunning(false);
    }, 1000);
}

export function collectBonus(bonusType: 'shield' | 'speed' | 'slow', duration: number = 5000) {
    const { activateBonus } = useExtendedGameStore.getState();
    const { addLog } = useConsole.getState();
    
    activateBonus(bonusType, duration);
    
    const bonusMessages = {
        shield: 'üõ°Ô∏è –©–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –í—ã –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π.',
        speed: '‚ö° –£—Å–∫–æ—Ä–µ–Ω–∏–µ! –í—Ä–µ–º—è –∑–∞–º–µ–¥–ª–µ–Ω–æ.',
        slow: 'üêå –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π!'
    };
    
    addLog(bonusMessages[bonusType]);
}

export function collectItem(itemType: 'coin' | 'crystal' | 'key') {
    const { collectItem: storeCollectItem, playerProfile } = useExtendedGameStore.getState();
    const { addLog } = useConsole.getState();
    
    const itemId = `${itemType}-${Date.now()}`;
    storeCollectItem(itemId);
    
    const itemMessages = {
        coin: 'ü™ô –ú–æ–Ω–µ—Ç–∞ —Å–æ–±—Ä–∞–Ω–∞! +10 XP',
        crystal: 'üíé –ö—Ä–∏—Å—Ç–∞–ª–ª –Ω–∞–π–¥–µ–Ω! +25 XP',
        key: 'üîë –ö–ª—é—á –ø–æ–ª—É—á–µ–Ω! –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏.'
    };
    
    const xpRewards = {
        coin: 10,
        crystal: 25,
        key: 15
    };
    
    if (playerProfile) {
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—ã—Ç –∑–∞ —Å–æ–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
        const updatedProfile = {
            ...playerProfile,
            stats: {
                ...playerProfile.stats,
                totalXP: playerProfile.stats.totalXP + xpRewards[itemType]
            }
        };
        
        useExtendedGameStore.setState({ playerProfile: updatedProfile });
    }
    
    addLog(itemMessages[itemType]);
}

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π
export function handleCollision() {
    const { activeBonuses } = useExtendedGameStore.getState();
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —â–∏—Ç - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ
    if (activeBonuses.includes('shield')) {
        const { addLog } = useConsole.getState();
        addLog('üõ°Ô∏è –©–∏—Ç –∑–∞—â–∏—Ç–∏–ª –æ—Ç —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è!');
        return false; // –ù–µ –ø–æ–≥–∏–±–∞–µ–º
    }
    
    // –ò–Ω–∞—á–µ - —Å–º–µ—Ä—Ç—å
    die();
    return true; // –ü–æ–≥–∏–±–ª–∏
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ–Ω—É—Å–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏
export function activateSpeedBonus() {
    collectBonus('speed', 8000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —â–∏—Ç–∞
export function activateShield() {
    collectBonus('shield', 10000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–¥–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
export function activateSlowMotion() {
    collectBonus('slow', 6000);
}
