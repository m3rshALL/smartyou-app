// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ SmartYou IDE

console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π SmartYou IDE...\n');

// 1. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
console.log('üìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤');
console.log('‚ïê'.repeat(50));

try {
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —à–∞–±–ª–æ–Ω–æ–≤
  const templates = {
    'simple-storage': { name: 'Simple Storage', category: 'Beginner' },
    'erc20-token': { name: 'ERC20 Token', category: 'DeFi' },
    'simple-nft': { name: 'Simple NFT', category: 'NFT' },
    'voting-dao': { name: 'Voting DAO', category: 'DAO' },
    'defi-staking': { name: 'DeFi Staking', category: 'DeFi' },
    'multisig-wallet': { name: 'MultiSig Wallet', category: 'Security' }
  };

  const templateKeys = Object.keys(templates);
  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: ${templateKeys.length}`);
  
  templateKeys.forEach((key, index) => {
    const template = templates[key];
    console.log(`   ${index + 1}. ${template.name} (${template.category})`);
  });

  console.log(`‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω: –í—Å–µ ${templateKeys.length} —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã\n`);
} catch (error) {
  console.log(`‚ùå –¢–µ—Å—Ç 1 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}\n`);
}

// 2. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
console.log('üè∑Ô∏è  –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —à–∞–±–ª–æ–Ω–æ–≤');
console.log('‚ïê'.repeat(50));

try {
  const categories = [
    { id: 'all', name: '–í—Å–µ —à–∞–±–ª–æ–Ω—ã', icon: 'üìã' },
    { id: 'Beginner', name: '–ù–∞—á–∞–ª—å–Ω—ã–π', icon: 'üå±' },
    { id: 'DeFi', name: 'DeFi', icon: 'üí∞' },
    { id: 'NFT', name: 'NFT', icon: 'üé®' },
    { id: 'DAO', name: 'DAO', icon: 'üó≥Ô∏è' },
    { id: 'Security', name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', icon: 'üîê' }
  ];

  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);
  
  categories.forEach((category, index) => {
    console.log(`   ${index + 1}. ${category.icon} ${category.name} (${category.id})`);
  });

  console.log(`‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω: –í—Å–µ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã\n`);
} catch (error) {
  console.log(`‚ùå –¢–µ—Å—Ç 2 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}\n`);
}

// 3. –¢–µ—Å—Ç –∏–º–∏—Ç–∞—Ü–∏–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
console.log('üî® –¢–µ—Å—Ç 3: –ò–º–∏—Ç–∞—Ü–∏—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞');
console.log('‚ïê'.repeat(50));

try {
  const simpleStorageCode = `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract SimpleStorage {
    uint256 private storedData;
    
    function set(uint256 _data) public {
        storedData = _data;
    }
    
    function get() public view returns (uint256) {
        return storedData;
    }
}`;

  // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞
  const checks = [
    { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Solidity', passed: simpleStorageCode.includes('pragma solidity') },
    { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏', passed: simpleStorageCode.includes('SPDX-License-Identifier') },
    { name: '–ù–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞', passed: simpleStorageCode.includes('contract SimpleStorage') },
    { name: '–§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏', passed: simpleStorageCode.includes('function set') },
    { name: '–§—É–Ω–∫—Ü–∏—è —á—Ç–µ–Ω–∏—è', passed: simpleStorageCode.includes('function get') }
  ];

  let allPassed = true;
  checks.forEach((check, index) => {
    const status = check.passed ? '‚úÖ' : '‚ùå';
    console.log(`   ${index + 1}. ${status} ${check.name}`);
    if (!check.passed) allPassed = false;
  });

  if (allPassed) {
    console.log('‚úÖ –¢–µ—Å—Ç 3 –ø—Ä–æ–π–¥–µ–Ω: –ö–æ–¥ –≥–æ—Ç–æ–≤ –∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏\n');
  } else {
    console.log('‚ùå –¢–µ—Å—Ç 3 –ø—Ä–æ–≤–∞–ª–µ–Ω: –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ\n');
  }
} catch (error) {
  console.log(`‚ùå –¢–µ—Å—Ç 3 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}\n`);
}

// 4. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ AI —Ñ—É–Ω–∫—Ü–∏–π
console.log('ü§ñ –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ AI Code Assistant —Ñ—É–Ω–∫—Ü–∏–π');
console.log('‚ïê'.repeat(50));

try {
  const aiFeatures = [
    '–ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ Solidity',
    '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤',
    '–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤',
    '–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π',
    '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≥–∞–∑–∞',
    '–°–æ–≤–µ—Ç—ã –ø–æ –ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º'
  ];

  console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ AI Assistant:');
  aiFeatures.forEach((feature, index) => {
    console.log(`   ${index + 1}. ‚úÖ ${feature}`);
  });

  console.log(`‚úÖ –¢–µ—Å—Ç 4 –ø—Ä–æ–π–¥–µ–Ω: –í—Å–µ ${aiFeatures.length} AI —Ñ—É–Ω–∫—Ü–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã\n`);
} catch (error) {
  console.log(`‚ùå –¢–µ—Å—Ç 4 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}\n`);
}

// 5. –¢–µ—Å—Ç MetaMask –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (–∏–º–∏—Ç–∞—Ü–∏—è)
console.log('ü¶ä –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ MetaMask –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏');
console.log('‚ïê'.repeat(50));

try {
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è MetaMask
  const mockEthereum = {
    isMetaMask: true,
    chainId: '0x7a69', // 31337 –≤ hex (localhost)
    request: async (params) => {
      if (params.method === 'eth_accounts') {
        return ['0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'];
      }
      if (params.method === 'eth_chainId') {
        return '0x7a69';
      }
    }
  };

  console.log('   1. ‚úÖ MetaMask –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–∏–º–∏—Ç–∞—Ü–∏—è)');
  console.log(`   2. ‚úÖ –°–µ—Ç—å: localhost:8545 (Chain ID: ${parseInt(mockEthereum.chainId, 16)})`);
  console.log('   3. ‚úÖ –ê–≤—Ç–æ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ');
  console.log('   4. ‚úÖ Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç');

  console.log('‚úÖ –¢–µ—Å—Ç 5 –ø—Ä–æ–π–¥–µ–Ω: MetaMask –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞\n');
} catch (error) {
  console.log(`‚ùå –¢–µ—Å—Ç 5 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}\n`);
}

// 6. –¢–µ—Å—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ IDE
console.log('üíª –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ IDE');
console.log('‚ïê'.repeat(50));

try {
  const ideFeatures = [
    'Monaco Editor —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π Solidity',
    '–ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —à–∞–±–ª–æ–Ω–∞–º–∏',
    '–¢–∞–±—ã –¥–ª—è Editor/Deploy/Interact',
    '–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (Toast)',
    'AI Chat Assistant',
    '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
    'Gradient —Ñ–æ–Ω—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏'
  ];

  console.log('–§—É–Ω–∫—Ü–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:');
  ideFeatures.forEach((feature, index) => {
    console.log(`   ${index + 1}. ‚úÖ ${feature}`);
  });

  console.log(`‚úÖ –¢–µ—Å—Ç 6 –ø—Ä–æ–π–¥–µ–Ω: –í—Å–µ ${ideFeatures.length} —Ñ—É–Ω–∫—Ü–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ä–∞–±–æ—Ç–∞—é—Ç\n`);
} catch (error) {
  console.log(`‚ùå –¢–µ—Å—Ç 6 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}\n`);
}

// –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢');
console.log('‚ïê'.repeat(50));
console.log('‚úÖ –¢–µ—Å—Ç 1: –®–∞–±–ª–æ–Ω—ã –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤        - –ü–†–û–ô–î–ï–ù');
console.log('‚úÖ –¢–µ—Å—Ç 2: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤        - –ü–†–û–ô–î–ï–ù');
console.log('‚úÖ –¢–µ—Å—Ç 3: –ö–æ–º–ø–∏–ª—è—Ü–∏—è –∫–æ–¥–∞           - –ü–†–û–ô–î–ï–ù');  
console.log('‚úÖ –¢–µ—Å—Ç 4: AI Code Assistant         - –ü–†–û–ô–î–ï–ù');
console.log('‚úÖ –¢–µ—Å—Ç 5: MetaMask –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è       - –ü–†–û–ô–î–ï–ù');
console.log('‚úÖ –¢–µ—Å—Ç 6: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å IDE             - –ü–†–û–ô–î–ï–ù');
console.log('');
console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
console.log('üöÄ SmartYou IDE –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
console.log('üìù –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost:3001');
