// scripts/deploy-smartyou-token.js
async function main() {
  console.log("\nüöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ SmartYou Token...\n");

  // Get the contract factory
  const SmartYouToken = await ethers.getContractFactory("SmartYouToken");
  
  console.log("üì¶ –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç...");
  
  // Get the deployer account
  const [deployer] = await ethers.getSigners();
  const deployerAddress = await deployer.getAddress();
  
  // Deploy the contract with proper constructor arguments
  const initialSupply = ethers.parseEther("100000"); // 100,000 tokens initial supply
  const smartYouToken = await SmartYouToken.deploy(
    "SmartYou Token",    // name
    "SYT",               // symbol
    initialSupply,       // initialSupply
    deployerAddress      // initialOwner
  );
  await smartYouToken.waitForDeployment();
  
  const contractAddress = await smartYouToken.getAddress();
  console.log("‚úÖ SmartYou Token —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –ø–æ –∞–¥—Ä–µ—Å—É:", contractAddress);
  
  // Get deployment details
  const balance = await ethers.provider.getBalance(deployerAddress);
  
  console.log("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:");
  console.log("‚îú‚îÄ –ê–¥—Ä–µ—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞—Ç–µ–ª—è:", deployerAddress);
  console.log("‚îú‚îÄ –ë–∞–ª–∞–Ω—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞—Ç–µ–ª—è:", ethers.formatEther(balance), "ETH");
  console.log("‚îú‚îÄ –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞:", contractAddress);
  
  // Test basic functionality
  console.log("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π...");
  
  // Check token details
  const name = await smartYouToken.name();
  const symbol = await smartYouToken.symbol();
  const decimals = await smartYouToken.decimals();
  const totalSupply = await smartYouToken.totalSupply();
  const ownerBalance = await smartYouToken.balanceOf(deployerAddress);
  
  console.log("‚îú‚îÄ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞:", name);
  console.log("‚îú‚îÄ –°–∏–º–≤–æ–ª:", symbol);
  console.log("‚îú‚îÄ –î–µ—Å—è—Ç–∏—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤:", decimals.toString());
  console.log("‚îú‚îÄ –û–±—â–∏–π –æ–±—ä–µ–º –≤—ã–ø—É—Å–∫–∞:", ethers.formatEther(totalSupply), symbol);
  console.log("‚îú‚îÄ –ë–∞–ª–∞–Ω—Å –≤–ª–∞–¥–µ–ª—å—Ü–∞:", ethers.formatEther(ownerBalance), symbol);
  
  // Test educational rewards
  console.log("\nüéì –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥...");
  
  try {
    // Test rewardForLevel function
    const rewardTx = await smartYouToken.rewardForLevel(deployerAddress, 1);
    await rewardTx.wait();
    
    const newBalance = await smartYouToken.balanceOf(deployerAddress);
    const levelsCompleted = await smartYouToken.levelsCompleted(deployerAddress);
    
    console.log("‚îú‚îÄ –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å 1:", ethers.formatEther(await smartYouToken.REWARD_PER_LEVEL()), symbol);
    console.log("‚îú‚îÄ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:", ethers.formatEther(newBalance), symbol);
    console.log("‚îú‚îÄ –£—Ä–æ–≤–Ω–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ:", levelsCompleted.toString());
    
    // Get student progress
    const [levels, balance] = await smartYouToken.getStudentProgress(deployerAddress);
    console.log("‚îú‚îÄ –ü—Ä–æ–≥—Ä–µ—Å—Å —Å—Ç—É–¥–µ–Ω—Ç–∞:", levels.toString(), "—É—Ä–æ–≤–Ω–µ–π,", ethers.formatEther(balance), symbol);
    
  } catch (error) {
    console.log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞–≥—Ä–∞–¥:", error.message);
  }
  
  // Test pause functionality (security feature)
  console.log("\nüîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...");
  
  try {
    // Pause the contract
    const pauseTx = await smartYouToken.pause();
    await pauseTx.wait();
    console.log("‚îú‚îÄ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ‚úÖ");
    
    // Check if paused
    const isPaused = await smartYouToken.paused();
    console.log("‚îú‚îÄ –°—Ç–∞—Ç—É—Å –ø–∞—É–∑—ã:", isPaused ? "–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" : "–ê–∫—Ç–∏–≤–µ–Ω");
    
    // Unpause
    const unpauseTx = await smartYouToken.unpause();
    await unpauseTx.wait();
    console.log("‚îú‚îÄ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω: ‚úÖ");
    
  } catch (error) {
    console.log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:", error.message);
  }
  
  console.log("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!");
  console.log("\nüìã –°–≤–æ–¥–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:");
  console.log("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê");
  console.log("‚îÇ                    SmartYou Token                           ‚îÇ");
  console.log("‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§");
  console.log("‚îÇ –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞:", contractAddress.padEnd(32), "‚îÇ");
  console.log("‚îÇ –ù–∞–∑–≤–∞–Ω–∏–µ:       ", name.padEnd(32), "‚îÇ");
  console.log("‚îÇ –°–∏–º–≤–æ–ª:         ", symbol.padEnd(32), "‚îÇ");
  console.log("‚îÇ –í–ª–∞–¥–µ–ª–µ—Ü:       ", deployerAddress.slice(0, 32).padEnd(32), "‚îÇ");
  console.log("‚îÇ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å:", ethers.formatEther(ownerBalance).padEnd(30), "‚îÇ");
  console.log("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò");
  
  // Save deployment info to file
  const fs = await import('fs');
  const deploymentInfo = {
    contractAddress,
    contractName: "SmartYouToken",
    deployer: deployerAddress,
    deploymentTime: new Date().toISOString(),
    network: "localhost",
    tokenDetails: {
      name,
      symbol,
      decimals: decimals.toString(),
      totalSupply: ethers.formatEther(totalSupply)
    }
  };
  
  fs.default.writeFileSync(
    'deployment-smartyou-token.json', 
    JSON.stringify(deploymentInfo, null, 2)
  );
  
  console.log("\nüíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ deployment-smartyou-token.json");
  
  return {
    contractAddress,
    contractName: "SmartYouToken",
    deployer: deployerAddress
  };
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:", error);
    process.exit(1);
  });
